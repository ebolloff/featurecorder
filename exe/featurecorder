#!/usr/bin/env ruby
if ENV['COVERAGE']
  require 'simplecov'

  # As described in the issue, every process must have an unique name:
  SimpleCov.command_name "binary #{Process.pid}"

  # When running with aruba simplecov was using /tmp/aruba as the root folder.
  # This is to force using the project folder
  SimpleCov.root(File.join(File.expand_path(File.dirname(__FILE__)), '..'))

  SimpleCov.start do
    filters.clear

    # Because simplecov filters everything outside of the SimpleCov.root
    # This should be added, cf.
    # https://github.com/colszowka/simplecov#default-root-filter-and-coverage-for-things-outside-of-it
    add_filter do |src|
      !(src.filename =~ /^#{SimpleCov.root}/) unless src.filename =~ /featurecorder/
    end

    # Ignoring test folders and tmp for Aruba
    add_filter '/spec/'
    add_filter '/test/'
    add_filter '/features/'
    add_filter '/tmp/'
  end
end

require "featurecorder"
require 'docopt'

doc = <<DOCOPT

Usage:
  #{File.basename(__FILE__)} [options] <file>

Options:
  -s --scenario-name=<scenario>   Name of the scenario.
  -f --feature-name=<feature>     Name of the feature.
  -o --output-directory=<dir>     Output directory for generated files. Default is current directory.
  -h --help                       Show this screen.

DOCOPT

begin
  d = Docopt::docopt(doc)
  Featurecorder::run(d["--scenario-name"], d["--feature-name"], d["<file>"], d["--output-directory"] || ".")
rescue Docopt::Exit => e
  puts e.message
end
